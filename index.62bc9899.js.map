{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.INITIAL_STATE;\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.status = Game.STATUS.idle;\n        this.initialState = initialState;\n        this.state = this.initialState.map(function(row) {\n            return row.slice();\n        });\n        this.score = 0;\n        this.moves = 0;\n        this.animation = {\n            newCell: []\n        };\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var newGrid = this.move(\"left\");\n                if (newGrid) {\n                    this.state = newGrid;\n                    this.animation.newCell = this.getRandomCell();\n                    if (!this.hasAvailableMoves(newGrid)) this.lose();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var newGrid = this.move(\"right\");\n                if (newGrid) {\n                    this.state = newGrid;\n                    this.animation.newCell = this.getRandomCell();\n                    if (!this.hasAvailableMoves(newGrid)) this.lose();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var columns = this.getGridData();\n                var newColumns = this.move(\"up\", columns);\n                if (newColumns) {\n                    this.state = this.getGridData(newColumns);\n                    this.animation.newCell = this.getRandomCell();\n                    if (!this.hasAvailableMoves(newColumns)) this.lose();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var columns = this.getGridData();\n                var newColumns = this.move(\"down\", columns);\n                if (newColumns) {\n                    this.state = this.getGridData(newColumns);\n                    this.animation.newCell = this.getRandomCell();\n                    if (!this.hasAvailableMoves(newColumns)) this.lose();\n                }\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS.playing;\n                this.getRandomCell();\n                this.getRandomCell();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.status = Game.STATUS.idle;\n                this.score = 0;\n                this.state = this.initialState.map(function(row) {\n                    return row.slice();\n                });\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"lose\",\n            value: function lose() {\n                this.status = Game.STATUS.lose;\n            }\n        },\n        {\n            key: \"win\",\n            value: function win() {\n                this.status = Game.STATUS.win;\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                var _this = this, _loop = function(i) {\n                    var newRow = grid[i].filter(function(cell) {\n                        return cell;\n                    });\n                    if (newRow.length > 1) newRow = _this.mergeCells(newRow, direction);\n                    while(newRow.length < 4)if (direction === \"left\" || direction === \"up\") newRow.push(0);\n                    else newRow.unshift(0);\n                    newGrid.push(newRow);\n                };\n                var grid = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;\n                if (this.status !== \"playing\") return false;\n                var newGrid = [];\n                for(var i = 0; i < grid.length; i++)_loop(i);\n                return JSON.stringify(grid) !== JSON.stringify(newGrid) ? newGrid : false;\n            }\n        },\n        {\n            key: \"hasAvailableMoves\",\n            value: function hasAvailableMoves(grid) {\n                for(var x = 0; x < grid.length; x++)for(var y = 0; y < grid[x].length; y++){\n                    if (grid[x][y] === 0) return true;\n                    if (x < grid.length - 1 && grid[x][y] === grid[x + 1][y]) return true;\n                    if (y < grid[x].length - 1 && grid[x][y] === grid[x][y + 1]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"getRandomCell\",\n            value: function getRandomCell() {\n                while(true){\n                    var totalCells = this.state.length * this.state[0].length;\n                    var randomIndex = Math.floor(Math.random() * totalCells);\n                    var x = Math.floor(randomIndex / this.state[0].length);\n                    var y = randomIndex % this.state[0].length;\n                    var value = Math.random() > 0.1 ? 2 : 4;\n                    if (this.isEmpty(this.state[x][y])) {\n                        this.state[x][y] = value;\n                        return [\n                            x,\n                            y,\n                            value\n                        ];\n                    }\n                }\n            }\n        },\n        {\n            key: \"getGridData\",\n            value: function getGridData() {\n                var _loop = function(i) {\n                    data.push(grid.map(function(row) {\n                        return row[i];\n                    }));\n                };\n                var grid = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.state;\n                var data = [];\n                for(var i = 0; i < grid.length; i++)_loop(i);\n                return data;\n            }\n        },\n        {\n            key: \"isEmpty\",\n            value: function isEmpty(cell) {\n                return cell === 0;\n            }\n        },\n        {\n            key: \"mergeCells\",\n            value: function mergeCells(row, direction) {\n                var currentRow = row;\n                var newRow = [];\n                var i = 0;\n                if (direction === \"right\" || direction === \"down\") currentRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(currentRow).reverse();\n                while(i < currentRow.length)if (currentRow[i] !== 0 && currentRow[i] === currentRow[i + 1]) {\n                    var sum = currentRow[i] * 2;\n                    this.score += sum;\n                    newRow.push(sum);\n                    if (sum === 2048) this.win();\n                    i += 2;\n                } else {\n                    newRow.push(currentRow[i]);\n                    i++;\n                }\n                if (direction === \"right\" || direction === \"down\") return newRow.reverse();\n                return newRow;\n            }\n        }\n    ], [\n        {\n            key: \"STATUS\",\n            get: function get() {\n                return {\n                    idle: \"idle\",\n                    playing: \"playing\",\n                    win: \"win\",\n                    lose: \"lose\"\n                };\n            }\n        },\n        {\n            key: \"INITIAL_STATE\",\n            get: function get() {\n                return [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\"button\");\nvar $197cd56b15c33885$var$field = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$fieldRows = $197cd56b15c33885$var$field.rows;\nvar $197cd56b15c33885$var$fieldCells = (0, $227c6742e0ff6f82$export$71511d61b312f219)($197cd56b15c33885$var$fieldRows).map(function(row) {\n    return row.cells;\n});\nfunction $197cd56b15c33885$var$emptyField() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = $197cd56b15c33885$var$fieldCells[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            (0, $227c6742e0ff6f82$export$71511d61b312f219)(row).forEach(function(cell) {\n                if (cell.classList.length === 2) {\n                    cell.classList.remove(cell.classList[1]);\n                    cell.classList.remove(cell.classList[1]);\n                    cell.textContent = \"\";\n                }\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction $197cd56b15c33885$var$updateCell(arr, add) {\n    var cell = $197cd56b15c33885$var$fieldCells[arr[0]][arr[1]];\n    var classes = cell.classList;\n    var index = (0, $227c6742e0ff6f82$export$71511d61b312f219)(classes).findIndex(function(element) {\n        return element.startsWith(\"field-cell--\");\n    }, 0);\n    if (index !== -1) cell.classList.remove(classes[index]);\n    if ((0, $227c6742e0ff6f82$export$71511d61b312f219)(classes).includes(\"new\")) cell.classList.remove(\"new\");\n    if (add) {\n        if ($197cd56b15c33885$var$game.animation.newCell.length === 0 || arr.every(function(e, i) {\n            return e === $197cd56b15c33885$var$game.animation.newCell[i];\n        })) cell.classList.add(\"new\");\n        cell.classList.add(\"field-cell--\".concat(arr[2]));\n        cell.textContent = \"\".concat(arr[2]);\n    } else {\n        cell.classList.remove(classes[index]);\n        cell.textContent = \"\";\n    }\n}\nfunction $197cd56b15c33885$var$move(grid) {\n    for(var x = 0; x < grid.length; x++)for(var y = 0; y < grid[x].length; y++){\n        $197cd56b15c33885$var$updateCell([\n            x,\n            y,\n            grid[x][y]\n        ], grid[x][y] !== 0);\n        $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.score;\n        $197cd56b15c33885$var$checkStatus();\n    }\n}\nfunction $197cd56b15c33885$var$checkStatus() {\n    if ($197cd56b15c33885$var$game.status === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.status === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function(e) {\n    if ((0, $227c6742e0ff6f82$export$71511d61b312f219)(e.target.classList).includes(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$score.textContent = 0;\n        $197cd56b15c33885$var$emptyField();\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.status === \"playing\") switch(e.code){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n            break;\n    }\n});\n$197cd56b15c33885$var$field.addEventListener(\"touchstart\", $197cd56b15c33885$var$handleTouchStart, {\n    passive: true\n});\n$197cd56b15c33885$var$field.addEventListener(\"touchmove\", $197cd56b15c33885$var$handleTouchMove, {\n    passive: true\n});\n$197cd56b15c33885$var$field.addEventListener(\"touchend\", $197cd56b15c33885$var$handleTouchEnd, {\n    passive: true\n});\nvar $197cd56b15c33885$var$touchStartX, $197cd56b15c33885$var$touchStartY, $197cd56b15c33885$var$swipeDirection;\nfunction $197cd56b15c33885$var$handleTouchStart(e) {\n    $197cd56b15c33885$var$touchStartX = e.touches[0].clientX;\n    $197cd56b15c33885$var$touchStartY = e.touches[0].clientY;\n}\nfunction $197cd56b15c33885$var$handleTouchMove(e) {\n    var currentX = e.touches[0].clientX;\n    var currentY = e.touches[0].clientY;\n    var swipeX = currentX - $197cd56b15c33885$var$touchStartX;\n    var swipeY = currentY - $197cd56b15c33885$var$touchStartY;\n    if (Math.abs(swipeX) > Math.abs(swipeY)) $197cd56b15c33885$var$swipeDirection = swipeX > 0 ? \"right\" : \"left\";\n    else $197cd56b15c33885$var$swipeDirection = swipeY > 0 ? \"down\" : \"up\";\n}\nfunction $197cd56b15c33885$var$handleTouchEnd(e) {\n    if ($197cd56b15c33885$var$game.status === \"playing\") switch($197cd56b15c33885$var$swipeDirection){\n        case \"left\":\n            $197cd56b15c33885$var$game.moveLeft();\n            $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n            break;\n        case \"right\":\n            $197cd56b15c33885$var$game.moveRight();\n            $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n            break;\n        case \"up\":\n            $197cd56b15c33885$var$game.moveUp();\n            $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n            break;\n        case \"down\":\n            $197cd56b15c33885$var$game.moveDown();\n            $197cd56b15c33885$var$move($197cd56b15c33885$var$game.state);\n            break;\n    }\n}\n\n})();\n//# sourceMappingURL=index.62bc9899.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\n\nconst game = new Game();\n\nconst button = document.querySelector('button');\nconst field = document.querySelector('.game-field');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst score = document.querySelector('.game-score');\n\nconst fieldRows = field.rows;\nconst fieldCells = [...fieldRows].map((row) => row.cells);\n\nfunction emptyField() {\n  for (const row of fieldCells) {\n    [...row].forEach((cell) => {\n      if (cell.classList.length === 2) {\n        cell.classList.remove(cell.classList[1]);\n        cell.classList.remove(cell.classList[1]);\n        cell.textContent = '';\n      }\n    });\n  }\n}\n\nfunction updateCell(arr, add) {\n  const cell = fieldCells[arr[0]][arr[1]];\n  const classes = cell.classList;\n  const index = [...classes].findIndex(\n    (element) => element.startsWith('field-cell--'),\n    0,\n  );\n\n  if (index !== -1) {\n    cell.classList.remove(classes[index]);\n  }\n\n  if ([...classes].includes('new')) {\n    cell.classList.remove('new');\n  }\n\n  if (add) {\n    if (\n      game.animation.newCell.length === 0\n      || arr.every((e, i) => e === game.animation.newCell[i])\n    ) {\n      cell.classList.add('new');\n    }\n\n    cell.classList.add(`field-cell--${arr[2]}`);\n    cell.textContent = `${arr[2]}`;\n  } else {\n    cell.classList.remove(classes[index]);\n    cell.textContent = '';\n  }\n}\n\nfunction move(grid) {\n  for (let x = 0; x < grid.length; x++) {\n    for (let y = 0; y < grid[x].length; y++) {\n      updateCell([x, y, grid[x][y]], grid[x][y] !== 0);\n      score.textContent = game.score;\n      checkStatus();\n    }\n  }\n}\n\nfunction checkStatus() {\n  if (game.status === 'win') {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (game.status === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nbutton.addEventListener('click', (e) => {\n  if ([...e.target.classList].includes('start')) {\n    game.start();\n    move(game.state);\n\n    messageStart.classList.add('hidden');\n\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n  } else {\n    game.restart();\n    score.textContent = 0;\n    emptyField();\n\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    messageStart.classList.remove('hidden');\n\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.textContent = 'Start';\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.status === 'playing') {\n    switch (e.code) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        move(game.state);\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        move(game.state);\n        break;\n      case 'ArrowUp':\n        game.moveUp();\n        move(game.state);\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        move(game.state);\n        break;\n    }\n  }\n});\n\nfield.addEventListener('touchstart', handleTouchStart, { passive: true });\nfield.addEventListener('touchmove', handleTouchMove, { passive: true });\nfield.addEventListener('touchend', handleTouchEnd, { passive: true });\n\nlet touchStartX, touchStartY, swipeDirection;\n\nfunction handleTouchStart(e) {\n  touchStartX = e.touches[0].clientX;\n  touchStartY = e.touches[0].clientY;\n}\n\nfunction handleTouchMove(e) {\n  const currentX = e.touches[0].clientX;\n  const currentY = e.touches[0].clientY;\n\n  const swipeX = currentX - touchStartX;\n  const swipeY = currentY - touchStartY;\n\n  if (Math.abs(swipeX) > Math.abs(swipeY)) {\n    swipeDirection = swipeX > 0 ? 'right' : 'left';\n  } else {\n    swipeDirection = swipeY > 0 ? 'down' : 'up';\n  }\n}\n\nfunction handleTouchEnd(e) {\n  if (game.status === 'playing') {\n    switch (swipeDirection) {\n      case 'left':\n        game.moveLeft();\n        move(game.state);\n        break;\n      case 'right':\n        game.moveRight();\n        move(game.state);\n        break;\n      case 'up':\n        game.moveUp();\n        move(game.state);\n        break;\n      case 'down':\n        game.moveDown();\n        move(game.state);\n        break;\n    }\n  }\n}\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\nclass Game {\n  static get STATUS() {\n    return {\n      idle: 'idle',\n      playing: 'playing',\n      win: 'win',\n      lose: 'lose',\n    };\n  }\n\n  static get INITIAL_STATE() {\n    return [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n  }\n\n  constructor(initialState = Game.INITIAL_STATE) {\n    this.status = Game.STATUS.idle;\n    this.initialState = initialState;\n    this.state = this.initialState.map((row) => row.slice());\n    this.score = 0;\n    this.moves = 0;\n\n    this.animation = {\n      newCell: [],\n    };\n  }\n\n  moveLeft() {\n    const newGrid = this.move('left');\n\n    if (newGrid) {\n      this.state = newGrid;\n\n      this.animation.newCell = this.getRandomCell();\n\n      if (!this.hasAvailableMoves(newGrid)) {\n        this.lose();\n      }\n    }\n  }\n\n  moveRight() {\n    const newGrid = this.move('right');\n\n    if (newGrid) {\n      this.state = newGrid;\n      this.animation.newCell = this.getRandomCell();\n\n      if (!this.hasAvailableMoves(newGrid)) {\n        this.lose();\n      }\n    }\n  }\n\n  moveUp() {\n    const columns = this.getGridData();\n    const newColumns = this.move('up', columns);\n\n    if (newColumns) {\n      this.state = this.getGridData(newColumns);\n      this.animation.newCell = this.getRandomCell();\n\n      if (!this.hasAvailableMoves(newColumns)) {\n        this.lose();\n      }\n    }\n  }\n\n  moveDown() {\n    const columns = this.getGridData();\n    const newColumns = this.move('down', columns);\n\n    if (newColumns) {\n      this.state = this.getGridData(newColumns);\n      this.animation.newCell = this.getRandomCell();\n\n      if (!this.hasAvailableMoves(newColumns)) {\n        this.lose();\n      }\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.STATUS.playing;\n    this.getRandomCell();\n    this.getRandomCell();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.status = Game.STATUS.idle;\n    this.score = 0;\n    this.state = this.initialState.map((row) => row.slice());\n  }\n\n  // Add your own methods here\n  lose() {\n    this.status = Game.STATUS.lose;\n  }\n\n  win() {\n    this.status = Game.STATUS.win;\n  }\n\n  move(direction, grid = this.state) {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    const newGrid = [];\n\n    for (let i = 0; i < grid.length; i++) {\n      let newRow = grid[i].filter((cell) => cell);\n\n      if (newRow.length > 1) {\n        newRow = this.mergeCells(newRow, direction);\n      }\n\n      while (newRow.length < 4) {\n        if (direction === 'left' || direction === 'up') {\n          newRow.push(0);\n        } else {\n          newRow.unshift(0);\n        }\n      }\n\n      newGrid.push(newRow);\n    }\n\n    return JSON.stringify(grid) !== JSON.stringify(newGrid) ? newGrid : false;\n  }\n\n  hasAvailableMoves(grid) {\n    for (let x = 0; x < grid.length; x++) {\n      for (let y = 0; y < grid[x].length; y++) {\n        if (grid[x][y] === 0) {\n          return true;\n        }\n\n        if (x < grid.length - 1 && grid[x][y] === grid[x + 1][y]) {\n          return true;\n        }\n\n        if (y < grid[x].length - 1 && grid[x][y] === grid[x][y + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  getRandomCell() {\n    while (true) {\n      const totalCells = this.state.length * this.state[0].length;\n      const randomIndex = Math.floor(Math.random() * totalCells);\n      const x = Math.floor(randomIndex / this.state[0].length);\n      const y = randomIndex % this.state[0].length;\n      const value = Math.random() > 0.1 ? 2 : 4;\n\n      if (this.isEmpty(this.state[x][y])) {\n        this.state[x][y] = value;\n\n        return [x, y, value];\n      }\n    }\n  }\n\n  getGridData(grid = this.state) {\n    const data = [];\n\n    for (let i = 0; i < grid.length; i++) {\n      data.push(grid.map((row) => row[i]));\n    }\n\n    return data;\n  }\n\n  isEmpty(cell) {\n    return cell === 0;\n  }\n\n  mergeCells(row, direction) {\n    let currentRow = row;\n    const newRow = [];\n    let i = 0;\n\n    if (direction === 'right' || direction === 'down') {\n      currentRow = [...currentRow].reverse();\n    }\n\n    while (i < currentRow.length) {\n      if (currentRow[i] !== 0 && currentRow[i] === currentRow[i + 1]) {\n        const sum = currentRow[i] * 2;\n\n        this.score += sum;\n\n        newRow.push(sum);\n\n        if (sum === 2048) {\n          this.win();\n        }\n        i += 2;\n      } else {\n        newRow.push(currentRow[i]);\n        i++;\n      }\n    }\n\n    if (direction === 'right' || direction === 'down') {\n      return newRow.reverse();\n    }\n\n    return newRow;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","$197cd56b15c33885$var$touchStartX","$197cd56b15c33885$var$touchStartY","$197cd56b15c33885$var$swipeDirection","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","INITIAL_STATE","instance","Constructor","status","STATUS","idle","state","map","row","score","moves","animation","newCell","get","playing","win","lose","value","newGrid","move","getRandomCell","hasAvailableMoves","columns","getGridData","newColumns","direction","_this","grid","_loop","newRow","filter","cell","mergeCells","push","unshift","JSON","stringify","x","y","randomIndex","Math","floor","random","isEmpty","data","currentRow","reverse","sum","$197cd56b15c33885$var$button","document","querySelector","$197cd56b15c33885$var$field","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$score","$197cd56b15c33885$var$fieldCells","rows","cells","$197cd56b15c33885$var$move","$197cd56b15c33885$var$updateCell","add","classes","classList","index","findIndex","element","startsWith","remove","includes","every","e","concat","textContent","addEventListener","start","restart","$197cd56b15c33885$var$emptyField","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","forEach","err","return","code","moveLeft","moveRight","moveUp","moveDown","touches","clientX","clientY","passive","currentX","currentY","swipeX","swipeY","abs"],"version":3,"file":"index.62bc9899.js.map"}